name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Wait until Postgres is healthy before running steps
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      NODE_ENV: test
      # DB for Prisma
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/starter?schema=public
      # JWT secrets (dummy values for CI)
      JWT_ACCESS_SECRET: test_access_secret_please_change
      JWT_REFRESH_SECRET: test_refresh_secret_please_change
      JWT_ACCESS_EXPIRY: 15m
      JWT_REFRESH_EXPIRY: 7d
      # Metrics off for tests
      METRICS_ENABLED: "false"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      # Create database the URL points to
      - name: Create test database
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          until pg_isready -h localhost -p 5432 -U postgres; do sleep 1; done
          psql -h localhost -U postgres -c "CREATE DATABASE starter;" || true
        env:
          PGPASSWORD: postgres

      # Ensure Prisma client/migrations are ready before tests
      - name: Prisma migrate & generate
        run: |
          npx prisma migrate deploy
          npx prisma generate

      # Run coverage tests (pretest:cov will stamp build/meta beforehand)
      - run: npm run test:cov
