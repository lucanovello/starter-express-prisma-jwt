datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  role      Role      @default(USER)
  sessions  Session[]
  emailVerifiedAt DateTime?
  verificationTokens VerificationToken[]
  passwordResetTokens PasswordResetToken[]
  loginAttempts LoginAttempt[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  token     String
  valid     Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
}

model VerificationToken {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  tokenHash  String   @unique
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}

model PasswordResetToken {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  tokenHash  String   @unique
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}

model LoginAttempt {
  id             String   @id @default(uuid())
  user           User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String?
  emailLowercase String
  ipAddress      String
  failCount      Int      @default(0)
  lockedUntil    DateTime?
  firstFailedAt  DateTime @default(now())
  lastFailedAt   DateTime @default(now())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([emailLowercase, ipAddress])
  @@index([lockedUntil])
}

enum Role {
  USER
  ADMIN
}
